=== BACKEND CODE ANALYSIS REPORT ===
Generated on: 2025-04-24 03:10:16
Root Directory: C:\Users\Aarti\Downloads\ERP---Attendance-System-main\backendCode\models

==================================================

║ File: C:\Users\Aarti\Downloads\ERP---Attendance-System-main\backendCode\models\caregiver.model.js
║ Size: 527 bytes
║ Last Modified: 2025-04-20 02:08:05.847991
╠════════════════════════════════════════════════════════════════════════════════
const mongoose = require("mongoose");
const User = require("./user.model");

const caregiverSchema = new mongoose.Schema({
  patient: {
    type: mongoose.Schema.Types.ObjectId,
    ref: "Patient",
    required: true,
  },
  deviceId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: "Device",
  },
  relationship: {
    type: String,
    required: true,
  },
  isAlsoFamilyMember: {
    type: Boolean,
    default: true,
  },
});

module.exports = User.discriminator("Caregiver", caregiverSchema);


╚════════════════════════════════════════════════════════════════════════════════

║ File: C:\Users\Aarti\Downloads\ERP---Attendance-System-main\backendCode\models\device.model.js
║ Size: 472 bytes
║ Last Modified: 2025-04-06 19:43:52.119123
╠════════════════════════════════════════════════════════════════════════════════
﻿const mongoose = require("mongoose");

const deviceSchema = new mongoose.Schema({
  patient: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Patient',
    required: true
  },
  deviceId: {
    type: String,
    required: true,
    unique: true
  },
  lastActive: Date,
  status: {
    type: String,
    enum: ['active', 'inactive'],
    default: 'active'
  }
}, { timestamps: true });

module.exports = mongoose.model("Device", deviceSchema);

╚════════════════════════════════════════════════════════════════════════════════

║ File: C:\Users\Aarti\Downloads\ERP---Attendance-System-main\backendCode\models\family.model.js
║ Size: 405 bytes
║ Last Modified: 2025-04-09 10:42:20.685526
╠════════════════════════════════════════════════════════════════════════════════
const mongoose = require("mongoose");
const User = require("./user.model");

const familySchema = new mongoose.Schema({
  relationship: {
    type: String,
    required: [true, "Relationship to patient is required"],
  },
  patients: {
    type: mongoose.Schema.Types.ObjectId,
    ref: "Patient",
    required: true,
  },
});

module.exports = User.discriminator("Family", familySchema);


╚════════════════════════════════════════════════════════════════════════════════

║ File: C:\Users\Aarti\Downloads\ERP---Attendance-System-main\backendCode\models\patient.model.js
║ Size: 498 bytes
║ Last Modified: 2025-04-09 10:37:06.415977
╠════════════════════════════════════════════════════════════════════════════════
﻿const mongoose = require("mongoose");
const User = require("./user.model");

const patientSchema = new mongoose.Schema({
  medicalRecordNumber: {
    type: String,
    unique: true,
  },
  dateOfBirth: Date,
  primaryDiagnosis: String,
  emergencyContact: {
    name: String,
    relationship: String,
    phone: String,
  },
  devices: {
    type: mongoose.Schema.Types.ObjectId,
    ref: "Device",
  },
});

module.exports = User.discriminator("Patient", patientSchema);


╚════════════════════════════════════════════════════════════════════════════════

║ File: C:\Users\Aarti\Downloads\ERP---Attendance-System-main\backendCode\models\reminder.model.js
║ Size: 712 bytes
║ Last Modified: 2025-04-23 03:15:07.651968
╠════════════════════════════════════════════════════════════════════════════════
﻿const mongoose = require("mongoose");

const reminderSchema = new mongoose.Schema(
  {
    patient: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "Patient",
      required: true,
    },
    createdBy: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "User",
      required: true,
    },
    title: {
      type: String,
      required: true,
    },
    description: String,
    scheduledTime: {
      type: Date,
      required: true,
    },
    status: {
      type: String,
      enum: ["scheduled", "triggered", "cancelled"],
      default: "scheduled",
    },
  },
  { timestamps: true }
);

module.exports = mongoose.model("Reminder", reminderSchema);


╚════════════════════════════════════════════════════════════════════════════════

║ File: C:\Users\Aarti\Downloads\ERP---Attendance-System-main\backendCode\models\user.model.js
║ Size: 1029 bytes
║ Last Modified: 2025-04-09 10:33:53.072238
╠════════════════════════════════════════════════════════════════════════════════
const mongoose = require("mongoose");
const bcrypt = require("bcryptjs");

const userSchema = new mongoose.Schema(
  {
    email: {
      type: String,
      required: true,
      unique: true,
      trim: true,
      lowercase: true,
      match: [/^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$/, "Invalid email"],
    },
    password: {
      type: String,
      required: true,
      minlength: 8,
    },
    userType: {
      type: String,
      enum: ["patient", "caregiver", "family"],
      required: true,
      immutable: true,
    },
    name: {
      type: String,
      required: true,
      trim: true,
      maxlength: 50,
    },
    phone: {
      type: String,
      trim: true,
      match: [/^[+]?[(]?[0-9]{1,4}[)]?[-\s./0-9]*$/, "Invalid phone number"],
    },
    avatar: {
      type: String,
      default: "default-avatar.png",
    },
  },
  {
    timestamps: true,
    discriminatorKey: "userType",
  }
);

module.exports = mongoose.model("User", userSchema);


╚════════════════════════════════════════════════════════════════════════════════

=== END OF REPORT ===
